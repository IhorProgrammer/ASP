@{
	ViewData["Title"] = "Razor";
}
<h1>Синтаксис Razor</h1>
<p>
	Razor - це тихнологія впроваждення у HTML можливостей мови програмування (C#).
	Умовно, можливості Razor поділяються на вирази та інструкції.
	Основу синтаксису складає символ &commat; через, що  до HTML цей симол слід вставляти через сутність. <b>&amp;commat;</b>.
	Однак, Razon розпізнає адреси E-mail, у них цей символ змінювати не треба: user@mail.net
</p>
<p>
	Вирази - мають результат. Razor - вирази його відобраєають\
	Якщо вираз простий, наприклад, виведення зміної, то додаткових інструкцій не треба, 
	просто зазначається <code>&commat;x</code>, для більш складних вживаються круглі дужки <code>&commat;(2 + 3)</code> @(2 + 3).
</p>
<p>
	Інструкції - без результату, який треба виводити. Інструкції Razor беруться у фігурні дужки  <code>&commat;{...}</code>
	У дужках всі інструкції слідують синтаксису мови (C#). Зміні, оголошені у таких блоках, доступні по chhtml документу. Деякі інструкції можна не обмежувати дужками, зокрема
</p>

@{
	int x = 10;
	string str = "Hello";
}

<p>
	умовні конструкції <code>&commat;if</code>
	@if( x < 10 )
	{
		<b>x менший за 10</b>
	}
	else
	{
		<b>x не менший за 10</b>
	}
	У конструкторі такого типу Razor сам намагається визначитись з тим, що є інструкцією мови HTML, а що - кодом .
	Як правило, це розпізнається тегами.
</p>
<p>
	Циклічні конструкції <code>&commat;while</code>
</p>
<ul>
	@while(str.Length > 0)
	{
		<li>@str</li>
		str = str[..(str.Length - 1)];
	}	
</ul>
<p>
	Також в проєкті є "суперглобальні" масиви, за допомогою яких можна передавати дані від контролера до представлення
	ViewData["formController"] = <i>@ViewData["formController"];</i>
</p>